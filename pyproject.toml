#[build-system]
#requires = ["setuptools", "wheel"]
#build-backend = "setuptools.build_meta"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


########################
# Poetry Configuration #
########################

[tool.poetry]
name = "tsdm"
packages = [{include = "tsdm", from="src"}]
version = "0.2.4"
description = "Time-Series Datasets and Models"
license = "MIT"
authors = ["Randolf Scholz <rscholz@ismll.de>"]
homepage = "https://git.tu-berlin.de/bvt-htbd/kiwi/tf1/tsdm"
repository = "https://git.tu-berlin.de/bvt-htbd/kiwi/tf1/tsdm"
readme = "README.rst"
include = ["CHANGELOG.rst", "LICENSE.rst", "CONTRIBUTING.rst"]
keywords = ["time-series", "machine-learning"]
documentation = "https://www.user.tu-berlin.de/randolf.scholz/tsdm"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: GPU :: NVIDIA CUDA :: 11.3",
    "Environment :: GPU :: NVIDIA CUDA",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]


[tool.poetry.extras]

[tool.poetry.dependencies]
python = ">=3.9, <3.11"
h5py = ">=3.4.0"
matplotlib = ">=3.4"
modin = {version = ">=0.12", extras = ["ray"]}
numba = ">=0.55"
numpy = ">=1.21"
pandas = ">=1.3"
pyarrow = ">=7.0"
pyyaml = ">=6.0"
scikit-learn = ">=1.0"
scipy = ">=1.7"
tables = ">=3.6"
tensorboard = ">=2.7"
torch = ">=1.11"
tqdm = ">=4.50"
xarray = ">=0.20"

[tool.poetry.dev-dependencies]
black = ">=22.1.0"
blacken-docs = ">=1.12.1"
flake8 = ">=4.0.1"
flake8-annotations = ">=2.7.0"
flake8-black = ">=0.2.4"
flake8-bugbear = ">=22.1.11"
flake8-comprehensions = ">=3.8.0"
flake8-docstrings = ">=1.6.0"
flake8-mutable = ">=1.2.0"
flake8-nb = ">=0.3.1"
flake8-pyi = ">=22.1.0"
flake8-rst = ">=0.8.0"
flake8-rst-docstrings = ">=0.2.5"
isort = ">=5.10.1"
mypy = ">=0.941"
nbconvert = ">=6.4.4"
poetry = ">=1.1.12"
pre-commit = ">=2.17.0"
pybadges = ">=3.0"
pycodestyle = ">=2.8.0"
pydeps = ">=1.10.12"
pydocstyle = ">=6.1.1"
pylint = ">=2.12.2"
pylint-gitlab = ">=1.0.0"
pytest = ">=6.2.5"
pytest-cov = ">=3.0.0"
pytest-rerunfailures = ">=10.2"
setuptools = ">=60.7.1"
sphinx = ">=4.5.0"
sphinx-autoapi = ">=1.8.4"
sphinx-copybutton = ">=0.4.0"
sphinx-rtd-theme = ">=1.0.0"
twine = ">=3.8.0"
types-PyYAML = ">=6.0.4"
types-backports = ">=0.1.3"
types-cryptography = ">=3.3.15"
types-enum34 = ">=1.1.8"
types-futures = ">=3.3.8"
types-ipaddress = ">=1.0.8"
types-protobuf = ">=3.19.8"
types-pyOpenSSL = ">=22.0.0"
types-redis = ">=4.1.15"
types-requests = ">=2.27.8"
types-setuptools = ">=57.4.8"
types-six = ">=1.16.10"
types-tabulate = ">=0.8.5"
types-toml = ">=0.10.3"
wheel = ">=0.37.1"
toml = "^0.10.2"
Sphinx = ">=4.5.0"
sphinx-math-dollar = "^1.2"

[tool.poetry.scripts]

########################
# PyLint Configuration #
########################
[tool.pylint]
[tool.pylint."MESSAGES CONTROL"]
enable= [
    "useless-suppression",
]
disable= [
    "C0103",  # invalid-name
    "C0144",  # non-ascii-name
    "R0801",  # similar lines
    "W0511",  # (fixme) (todos)
    "W1113",  # keyword-arg-before-vararg
    "R0902",  # too-many-instance-attributes
    "R0915",  # too-many-statements
    "R0914",  # too-many-locals
    "W0221",  # arguments-differ
]

[tool.pylint.REPORTS]
# Set the output format. Available formats are text, parseable, colorized, json and
# msvs (visual studio). You can also give a reporter class, e.g. mypackage.mymodule.MyReporterClass
output-format="colorized"

[tool.pylint.FORMAT]
max-line-length=120

[tool.pylint.TYPECHECK]
# List of members which are set dynamically and missed by pylint inference system, and so shouldn't
# trigger E1101 when accessed. Python regular expressions are accepted.
generated-members=["numpy.*","torch.*"]


######################
# MyPy Configuration #
######################
[tool.mypy]
allow_redefinition = false
color_output = true
error_summary = true
files = ["src/", "test/"]
plugins = "numpy.typing.mypy_plugin"
pretty = true
python_version = "3.9"
show_column_numbers = true
show_error_codes = true
warn_unused_ignores = true
#disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = [
    "h5py.*",
    "matplotlib.*",
    "modin.*",
    "numba.*",
    "pandas.*",
    "sklearn.*",
    "scipy.*",
    "tqdm.*",
]
ignore_missing_imports = true


#######################
# isort Configuration #
#######################
[tool.isort]
# isort profiles: black, django, pycharm, google, open_stack, plone, attrs, hug, wemake, appnexus
# black-compatible: black, appnexus
py_version=39
profile="black"
src_paths=["src/", "test/"]
# flake8-profiles: appnexus, cryptography, edited, google, pep8, pycharm, smarkets
# black-compatible: black, appnexus

#######################
# black Configuration #
#######################
[tool.black]
line-length = 88
target-version = ['py39']
color = true

############################
# pydocstyle Configuration #
############################
[tool.pydocstyle]
convention = "numpy"
#count = true

#########################
# pyright Configuration #
#########################
[tool.pyright]
pythonVersion = "3.9"
reportMissingImports = false
reportUnsupportedDunderAll = false


########################
# PyTest Configuration #
########################
[tool.pytest]
[tool.pytest.ini_options]
testpaths = [ "test/" ]
reruns = "3"
only_rerun = "AssertionError"
cov = "tsdm"

##########################
# Coverage Configuration #
##########################
[tool.coverage]

[tool.coverage.paths]
source = [
   "src/tsdm",
]

[tool.coverage.report]
exclude_lines = [
    "@abstractmethod",
    "@abc.abstractmethod",
    "@overload",
    "@typing.overload",
    "@singledispatch",
    "@singledispatchmethod",
    "if typing.TYPE_CHECKING",
]

[tool.coverage.run]
source = [
    "tsdm/",
    "test/",
]
